{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 21
  },
  "configurePresets": [
    {
      "name": "base",
      "description": "Base configuration with common settings and options",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "warnings": {
        "deprecated": true,
        "dev": true,
        "systemVars": true,
        "uninitialized": false,
        "unusedCli": false
      },
      "hidden": true
    },
    {
      "name": "vs2022",
      "description": "Use Visual Studio 2022 generator",
      "generator": "Visual Studio 17 2022",
      "architecture": {
        "value": "Win32",
        "strategy": "set"
      },
      "hidden": true
    },
    {
      "name": "ninja",
      "description": "Use Ninja generator",
      "generator": "Ninja",
      "architecture": {
        "value": "x86",
        "strategy": "external"
      },
      "hidden": true
    },
    {
      "name": "ninja-multi-config",
      "description": "Use Ninja Multi-Config generator",
      "generator": "Ninja Multi-Config",
      "architecture": {
        "value": "x86",
        "strategy": "external"
      },
      "hidden": true
    },
    {
      "name": "debug",
      "description": "Debug build configuration",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      },
      "hidden": true
    },
    {
      "name": "release",
      "description": "Release build configuration",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      },
      "hidden": true
    },
    {
      "name": "minsizerel",
      "description": "Minimal size release build configuration",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "MinSizeRel"
      },
      "hidden": true
    },
    {
      "name": "reldebinfo",
      "description": "Release with debug information build configuration",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      },
      "hidden": true
    },
    {
      "name": "windows",
      "description": "Configuration for Windows",
      "cacheVariables": {
        "CMAKE_C_SIMULATE_ID": "MSVC",
        "CMAKE_CXX_SIMULATE_ID": "MSVC"
      },
      "vendor": {
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "hostOS": [
            "Windows"
          ]
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "hidden": true
    },
    {
      "name": "msvc",
      "description": "Use MSVC compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_CXX_COMPILER": "cl"
      },
      "vendor": {
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "inheritEnvironments": "msvc_x86_x64",
          "intelliSenseMode": "windows-msvc-x86"
        }
      },
      "hidden": true
    },
    {
      "name": "clang-cl",
      "description": "Use Clang-CL compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang-cl",
        "CMAKE_CXX_COMPILER": "clang-cl",
        "CMAKE_C_COMPILER_TARGET": "i386-pc-windows-msvc",
        "CMAKE_CXX_COMPILER_TARGET": "i386-pc-windows-msvc",
        "CMAKE_CL_SHOWINCLUDES_PREFIX": "Note: including file:"
      },
      "vendor": {
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "inheritEnvironments": [
            "msvc_x86_x64",
            "clang_cl_x86"
          ],
          "intelliSenseMode": "windows-clang-x86"
        }
      },
      "hidden": true
    },
    {
      "name": "vs2022-msvc-windows",
      "inherits": [
        "base",
        "vs2022",
        "msvc",
        "windows"
      ]
    },
    {
      "name": "ninja-msvc-windows",
      "inherits": [
        "base",
        "ninja-multi-config",
        "msvc",
        "windows"
      ]
    },
    {
      "name": "ninja-clang-cl-windows",
      "inherits": [
        "base",
        "ninja-multi-config",
        "clang-cl",
        "windows"
      ]
    },
    {
      "name": "iwyu-ninja-windows",
      "inherits": [
        "base",
        "ninja",
        "clang-cl",
        "windows",
        "reldebinfo"
      ],
      "cacheVariables": {
        "ENABLE_IWYU": "ON"
      }
    },
    {
      "name": "clang-tidy-ninja-windows",
      "inherits": [
        "base",
        "ninja",
        "clang-cl",
        "windows",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_CLANG_TIDY": "ON"
      }
    },
    {
      "name": "cppcheck-ninja-msvc-windows",
      "inherits": [
        "base",
        "ninja",
        "msvc",
        "windows",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_CPPCHECK": "ON"
      }
    },
    {
      "name": "pvs-studio-ninja-msvc-windows",
      "inherits": [
        "base",
        "ninja",
        "msvc",
        "windows",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_PVS_STUDIO": "ON"
      }
    },
    {
      "name": "unittest-ninja-msvc-windows",
      "inherits": [
        "base",
        "ninja",
        "msvc",
        "windows",
        "release"
      ],
      "cacheVariables": {
        "BUILD_UNIT_TESTS": "ON"
      }
    },
    {
      "name": "linux",
      "description": "Configuration for Linux",
      "vendor": {
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "hostOS": [
            "Linux"
          ]
        },
        "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
          "copySources": true,
          "copyBuildOutput": true,
          "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}",
          "copySourcesOptions": {
            "exclusionList": [
              ".git",
              ".vs",
              "bin",
              "build",
              "out"
            ]
          }
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      },
      "hidden": true
    },
    {
      "name": "gcc",
      "description": "Use GCC compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      },
      "vendor": {
        "microsoft.com/VisualStudioSettings/CMake/1.0": {
          "inheritEnvironments": "linux_x86",
          "intelliSenseMode": "linux-gcc-x86"
        }
      },
      "hidden": true
    },
    {
      "name": "clang",
      "description": "Use Clang compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      },
      "hidden": true
    },
    {
      "name": "intel-llvm",
      "description": "Use Intel LLVM compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "icx",
        "CMAKE_CXX_COMPILER": "icpx"
      },
      "hidden": true
    },
    {
      "name": "ninja-gcc-linux",
      "inherits": [
        "base",
        "ninja-multi-config",
        "gcc",
        "linux"
      ]
    },
    {
      "name": "ninja-clang-linux",
      "inherits": [
        "base",
        "ninja-multi-config",
        "clang",
        "linux"
      ]
    },
    {
      "name": "ninja-intel-linux",
      "inherits": [
        "base",
        "ninja-multi-config",
        "intel-llvm",
        "linux"
      ]
    },
    {
      "name": "iwyu-ninja-linux",
      "inherits": [
        "base",
        "ninja",
        "clang",
        "linux",
        "reldebinfo"
      ],
      "cacheVariables": {
        "ENABLE_IWYU": "ON"
      }
    },
    {
      "name": "clang-tidy-ninja-linux",
      "inherits": [
        "base",
        "ninja",
        "clang",
        "linux",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_CLANG_TIDY": "ON"
      }
    },
    {
      "name": "cppcheck-ninja-gcc-linux",
      "inherits": [
        "base",
        "ninja",
        "gcc",
        "linux",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_CPPCHECK": "ON"
      }
    },
    {
      "name": "pvs-studio-ninja-gcc-linux",
      "inherits": [
        "base",
        "ninja",
        "gcc",
        "linux",
        "debug"
      ],
      "cacheVariables": {
        "ENABLE_PVS_STUDIO": "ON"
      }
    },
    {
      "name": "unittest-ninja-gcc-linux",
      "inherits": [
        "base",
        "ninja",
        "gcc",
        "linux",
        "release"
      ],
      "cacheVariables": {
        "BUILD_UNIT_TESTS": "ON"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "base",
      "description": "Base configuration with common settings and options",
      "verbose": false,
      "hidden": true
    },
    {
      "name": "windows",
      "description": "Configuration for Windows",
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "hidden": true
    },
    {
      "name": "linux",
      "description": "Configuration for Linux",
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      },
      "hidden": true
    },
    {
      "name": "vs2022-msvc-windows-debug",
      "displayName": "VS 2022 MSVC Debug",
      "description": "Build using Visual Studio 17 2022 generator and MSVC compiler with Debug configuration",
      "configurePreset": "vs2022-msvc-windows",
      "configuration": "Debug",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "vs2022-msvc-windows-release",
      "displayName": "VS 2022 MSVC Release",
      "description": "Build using Visual Studio 17 2022 generator and MSVC compiler with Release configuration",
      "configurePreset": "vs2022-msvc-windows",
      "configuration": "Release",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "vs2022-msvc-windows-reldebinfo",
      "displayName": "VS 2022 MSVC RelWithDebInfo",
      "description": "Build using Visual Studio 17 2022 generator and MSVC compiler with RelWithDebInfo configuration",
      "configurePreset": "vs2022-msvc-windows",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-msvc-windows-debug",
      "displayName": "Ninja MSVC Debug",
      "description": "Build using Ninja Multi-Config generator and MSVC compiler with Debug configuration",
      "configurePreset": "ninja-msvc-windows",
      "configuration": "Debug",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-msvc-windows-release",
      "displayName": "Ninja MSVC Release",
      "description": "Build using Ninja Multi-Config generator and MSVC compiler with Release configuration",
      "configurePreset": "ninja-msvc-windows",
      "configuration": "Release",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-msvc-windows-reldebinfo",
      "displayName": "Ninja MSVC RelWithDebInfo",
      "description": "Build using Ninja Multi-Config generator and MSVC compiler with RelWithDebInfo configuration",
      "configurePreset": "ninja-msvc-windows",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-clang-cl-windows-debug",
      "displayName": "Ninja Clang-CL Debug",
      "description": "Build using Ninja Multi-Config generator and Clang-CL compiler with Debug configuration",
      "configurePreset": "ninja-clang-cl-windows",
      "configuration": "Debug",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-clang-cl-windows-release",
      "displayName": "Ninja Clang-CL Release",
      "description": "Build using Ninja Multi-Config generator and Clang-CL compiler with Release configuration",
      "configurePreset": "ninja-clang-cl-windows",
      "configuration": "Release",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-clang-cl-windows-reldebinfo",
      "displayName": "Ninja Clang-CL RelWithDebInfo",
      "description": "Build using Ninja Multi-Config generator and Clang-CL compiler with RelWithDebInfo configuration",
      "configurePreset": "ninja-clang-cl-windows",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "iwyu-ninja-windows",
      "displayName": "Ninja Include What You Use",
      "description": "Run Include What You Use using Ninja generator and Clang-CL compiler",
      "configurePreset": "iwyu-ninja-windows",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "clang-tidy-ninja-windows",
      "displayName": "Ninja Clang-Tidy",
      "description": "Run Clang-Tidy using Ninja generator and Clang-CL compiler",
      "configurePreset": "clang-tidy-ninja-windows",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "cppcheck-ninja-msvc-windows",
      "displayName": "Ninja Cppcheck",
      "description": "Run Cppcheck using Ninja generator and MSVC compiler",
      "configurePreset": "cppcheck-ninja-msvc-windows",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "pvs-studio-ninja-msvc-windows",
      "displayName": "Ninja PVS-Studio",
      "description": "Run PVS-Studio using Ninja generator and MSVC compiler",
      "configurePreset": "pvs-studio-ninja-msvc-windows",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "unittest-ninja-msvc-windows",
      "displayName": "Ninja Unit Test",
      "description": "Build unit tests using Ninja generator and MSVC compiler",
      "configurePreset": "unittest-ninja-msvc-windows",
      "inherits": [
        "base",
        "windows"
      ]
    },
    {
      "name": "ninja-gcc-linux-debug",
      "displayName": "Ninja GCC Debug",
      "description": "Build using Ninja Multi-Config generator and GCC compiler with Debug configuration",
      "configurePreset": "ninja-gcc-linux",
      "configuration": "Debug",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-gcc-linux-release",
      "displayName": "Ninja GCC Release",
      "description": "Build using Ninja Multi-Config generator and GCC compiler with Release configuration",
      "configurePreset": "ninja-gcc-linux",
      "configuration": "Release",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-gcc-linux-reldebinfo",
      "displayName": "Ninja GCC RelWithDebInfo",
      "description": "Build using Ninja Multi-Config generator and GCC compiler with RelWithDebInfo configuration",
      "configurePreset": "ninja-gcc-linux",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-clang-linux-debug",
      "displayName": "Ninja Clang Debug",
      "description": "Build using Ninja Multi-Config generator and Clang compiler with Debug configuration",
      "configurePreset": "ninja-clang-linux",
      "configuration": "Debug",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-clang-linux-release",
      "displayName": "Ninja Clang Release",
      "description": "Build using Ninja Multi-Config generator and Clang compiler with Release configuration",
      "configurePreset": "ninja-clang-linux",
      "configuration": "Release",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-clang-linux-reldebinfo",
      "displayName": "Ninja Clang RelWithDebInfo",
      "description": "Build using Ninja Multi-Config generator and Clang compiler with RelWithDebInfo configuration",
      "configurePreset": "ninja-clang-linux",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-intel-linux-debug",
      "displayName": "Ninja Intel LLVM Debug",
      "description": "Build using Ninja Multi-Config generator and Intel LLVM compiler with Debug configuration",
      "configurePreset": "ninja-intel-linux",
      "configuration": "Debug",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-intel-linux-release",
      "displayName": "Ninja Intel LLVM Release",
      "description": "Build using Ninja Multi-Config generator and Intel LLVM compiler with Release configuration",
      "configurePreset": "ninja-intel-linux",
      "configuration": "Release",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "ninja-intel-linux-reldebinfo",
      "displayName": "Ninja Intel LLVM RelWithDebInfo",
      "description": "Build using Ninja Multi-Config generator and Intel LLVM compiler with RelWithDebInfo configuration",
      "configurePreset": "ninja-intel-linux",
      "configuration": "RelWithDebInfo",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "iwyu-ninja-linux",
      "displayName": "Ninja Include What You Use",
      "description": "Run Include What You Use using Ninja generator and Clang compiler",
      "configurePreset": "iwyu-ninja-linux",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "clang-tidy-ninja-linux",
      "displayName": "Ninja Clang-Tidy",
      "description": "Run Clang-Tidy using Ninja generator and Clang compiler",
      "configurePreset": "clang-tidy-ninja-linux",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "cppcheck-ninja-gcc-linux",
      "displayName": "Ninja Cppcheck",
      "description": "Run Cppcheck using Ninja generator and GCC compiler",
      "configurePreset": "cppcheck-ninja-gcc-linux",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "pvs-studio-ninja-gcc-linux",
      "displayName": "Ninja PVS-Studio",
      "description": "Run PVS-Studio using Ninja generator and GCC compiler",
      "configurePreset": "pvs-studio-ninja-gcc-linux",
      "inherits": [
        "base",
        "linux"
      ]
    },
    {
      "name": "unittest-ninja-gcc-linux",
      "displayName": "Ninja Unit Test",
      "description": "Build unit tests using Ninja generator and GCC compiler",
      "configurePreset": "unittest-ninja-gcc-linux",
      "inherits": [
        "base",
        "linux"
      ]
    }
  ],
  "testPresets": [
    {
      "name": "base",
      "description": "Base configuration with common settings and options",
      "output": {
        "verbosity": "default",
        "shortProgress": true,
        "outputOnFailure": true
      },
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": true,
        "timeout": 10
      },
      "hidden": true
    },
    {
      "name": "ninja-msvc-windows",
      "configurePreset": "unittest-ninja-msvc-windows",
      "inherits": [
        "base"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "ninja-gcc-linux",
      "configurePreset": "unittest-ninja-gcc-linux",
      "inherits": [
        "base"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    }
  ]
}
